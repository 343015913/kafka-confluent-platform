apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafka
      component: zookeeper
    name: zoo
  spec:
    clusterIP: None
    ports:
    - name: peer
      port: 2888
    - name: leader-election
      port: 3888
    selector:
      app: kafka
      component: zookeeper
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafka
      component: zookeeper
    name: zookeeper
  spec:
    ports:
    - name: client
      port: 2181
    selector:
      app: kafka
      component: zookeeper
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: kafka
      component: zookeeper
    name: zoo
  spec:
    selector:
      matchLabels:
        app: kafka
        component: zookeeper
    replicas: 3
    serviceName: zoo
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "5555"
          prometheus.io/scrape: "true"
        labels:
          app: kafka
          component: zookeeper
      spec:
        containers:
        - command:
          - /bin/bash
          - -c
          - export ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) && /etc/confluent/docker/run
          env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          image: kubernautslabs/cp-zookeeper:5.0.0
          name: zookeeper
          ports:
          - containerPort: 2181
            name: client
          - containerPort: 2888
            name: peer
          - containerPort: 3888
            name: leader-election
          volumeMounts:
          - mountPath: /var/lib/zookeeper/data
            name: datadir
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: datadir
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafka
      component: kafka-broker
    name: broker
  spec:
    clusterIP: None
    ports:
    - port: 9092
    selector:
      app: kafka
      component: kafka-broker
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafka
      component: kafka-broker
    name: kafka
  spec:
    ports:
    - port: 9092
    selector:
      app: kafka
      component: kafka-broker
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: kafka
      component: kafka-broker
    name: kafka
  spec:
    selector:
      matchLabels:
        app: kafka
    replicas: 3
    serviceName: broker
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "5555"
          prometheus.io/scrape: "true"
        labels:
          app: kafka
          component: kafka-broker
      spec:
        containers:
        - command:
          - /bin/bash
          - -c
          - unset KAFKA_PORT && export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://$HOSTNAME.broker:9092
            && /etc/confluent/docker/run
          env:
          - name: KAFKA_HEAP_OPTS
            value: -Xmx2G
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zoo
          - name: KAFKA_OPTS
            value: -javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar=5555:/opt/prometheus/conf/prometheus-config.yml
          image: kubernautslabs/cp-kafka:5.0.0
          name: broker
          ports:
          - containerPort: 9092
            name: kafka
          - containerPort: 5555
            name: prometheus
          volumeMounts:
          - mountPath: /var/lib/kafka/data
            name: datadir
            subPath: kafka-data
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: datadir
kind: List
metadata: {}